name: Analyze Docker Failures

on:
  workflow_dispatch:
    inputs:
      create_issue:
        description: 'Create GitHub issue with analysis'
        required: false
        default: 'false'
        type: boolean
      limit:
        description: 'Number of recent failures to analyze'
        required: false
        default: '3'
        type: string

  schedule:
    # Run daily at 2 AM UTC to analyze any recent failures
    - cron: '0 2 * * *'

permissions:
  contents: read
  issues: write

jobs:
  analyze-failures:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/scripts/requirements.txt

      - name: Analyze Recent Docker Failures
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          CREATE_ISSUE=${{ github.event.inputs.create_issue || 'false' }}
          LIMIT=${{ github.event.inputs.limit || '3' }}
          
          python .github/scripts/analyze_docker_failures.py \
            --repo "${{ github.repository }}" \
            --workflow "docker.yml" \
            --limit "$LIMIT" \
            $([ "$CREATE_ISSUE" = "true" ] && echo "--create-issue")

      - name: Summary
        run: |
          echo "## ðŸ¤– Docker Failure Analysis Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Analysis completed for recent Docker workflow failures" >> $GITHUB_STEP_SUMMARY
          echo "- Check the logs above for detailed Gemini AI analysis" >> $GITHUB_STEP_SUMMARY
          echo "- Issues created automatically if requested" >> $GITHUB_STEP_SUMMARY