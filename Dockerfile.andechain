# ANDECHAIN CUSTOM DOCKERFILE - ANDE Token Duality Integration
FROM rust:1.82-slim AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    clang \
    libclang-dev \
    llvm-dev \
    libc6-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy project files
COPY . .

# Set build arguments for better caching
ARG BUILD_PROFILE=release
ENV BUILD_PROFILE=$BUILD_PROFILE

# Set memory-efficient build flags
ARG RUSTFLAGS="-C codegen-units=1"
ENV RUSTFLAGS="$RUSTFLAGS"
ENV CARGO_BUILD_JOBS=2
ENV CARGO_INCREMENTAL=0

# Build our custom ev-reth with ANDE integration
RUN echo "ðŸ”¨ Building ANDE-enabled ev-reth..." && \
    cargo build --profile $BUILD_PROFILE --bin ev-reth

# Verify the build
RUN echo "âœ… Build completed!" && \
    ls -la target/$BUILD_PROFILE/ev-reth && \
    file target/$BUILD_PROFILE/ev-reth

# Runtime stage
FROM debian:bookworm-slim

LABEL org.opencontainers.image.title="ev-reth with ANDE Token Duality"
LABEL org.opencontainers.image.description="Custom ev-reth build for AndeChain with ANDE Token Duality integration"
LABEL org.opencontainers.image.licenses="MIT OR Apache-2.0"
LABEL version="0.3.0"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    curl \
    jq \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /root

# Copy our custom binary
COPY --from=builder /app/target/$BUILD_PROFILE/ev-reth /usr/local/bin/ev-reth

# Create scripts directory
RUN mkdir -p /usr/local/bin/scripts

# Copy health check script
COPY scripts/health-check.sh /usr/local/bin/scripts/health-check.sh
RUN chmod +x /usr/local/bin/scripts/health-check.sh

# Copy startup script
COPY scripts/start-ande.sh /usr/local/bin/scripts/start-ande.sh
RUN chmod +x /usr/local/bin/scripts/start-ande.sh

# Copy licenses
COPY LICENSE-* ./

# Expose ports: P2P, Discovery, Metrics, JSON-RPC, WebSocket, GraphQL, Engine API
EXPOSE 30303 30303/udp 9001 8545 8546 7545 8551

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /usr/local/bin/scripts/health-check.sh

# Set entrypoint to use our startup script
ENTRYPOINT ["/usr/local/bin/scripts/start-ande.sh"]

# Default command
CMD ["ev-reth"]